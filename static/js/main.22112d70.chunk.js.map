{"version":3,"sources":["images/hand.svg","components/StartPage/StartPage.jsx","components/WinningList/WinningList.jsx","components/Questions/Questions.jsx","components/Answers/Answers.jsx","components/GamePage/GamePage.jsx","components/EndPage/EndPage.jsx","App.js","index.js"],"names":["StartPage","className","src","hand","alt","to","exact","type","preparedMoney","money","sort","a","b","id","WinningList","visibleMenu","ClassNames","map","part","previus","selected","title","Questions","preparedQuestion","Answers","selectedAnswer","preparedAnswers","answers","filter","answer","questionId","useState","submit","setSubmit","item","correct","isCorrect","inCorrect","onClick","setTimeout","letter","GamePage","currentQuestionId","userAnswer","questions","find","question","setVisibleMenu","href","from","length","EndPage","setUserAnswer","setCurrentQuestionId","score","App","useEffect","path","component","render","ReactDOM","document","getElementById"],"mappings":"m/JAAe,MAA0B,iCCM5BA,G,MAAY,kBACvB,qBAAKC,UAAU,QAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOH,UAAU,WAEvC,sBAAKA,UAAU,eAAf,UACE,qBAAIA,UAAU,eAAd,4BAEE,uBAFF,oBAKA,cAAC,IAAD,CAASI,GAAG,QAAQC,OAAK,EAAzB,SACE,wBACEC,KAAK,SACLN,UAAU,gBAFZ,+B,gCCZJO,G,MAAgBC,EAAMC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,GAAKF,EAAEE,OAEvCC,EAAc,SAAC,GAAD,IAAGD,EAAH,EAAGA,GAAIE,EAAP,EAAOA,YAAP,OACzB,qBACEd,UACEe,IACE,WACA,CAAE,mBAAoBD,IAJ5B,SAQE,oBAAId,UAAU,eAAd,SACGO,EAAcS,KAAI,SAAAC,GAAI,OACrB,oBACEjB,UAAWe,IAAW,qBAAsB,CAC1CG,QAASD,EAAKL,GAAKA,EACnBO,SAAUF,EAAKL,KAAOA,IAH1B,SAOGK,EAAKG,OAFDH,EAAKL,YCrBPS,G,MAAY,SAAAC,GAAgB,OACvC,qBAAKtB,UAAU,YAAf,SACE,mBAAGA,UAAU,kBAAb,SAAgCsB,EAAiBF,Y,QCCxCG,G,MAAU,SAAC,GAA4B,IAA1BX,EAAyB,EAAzBA,GAAIY,EAAqB,EAArBA,eACtBC,EAAkBC,EAAQC,QAAO,SAAAC,GAAM,OAAIA,EAAOC,aAAejB,KADtB,EAErBkB,oBAAS,GAFY,mBAE1CC,EAF0C,KAElCC,EAFkC,KAIjD,OACE,qBAAKhC,UAAU,mBAAf,SACE,oBAAIA,UAAU,eAAd,SACGyB,EAAgBT,KAAI,SAAAiB,GAAI,OACvB,oBAAIjC,UAAU,gBAAd,SACE,yBACEM,KAAK,SAELN,UAAWe,IAAW,qBAAsB,CAC1CmB,QAASH,GAAUE,EAAKE,UACxBC,UAAWL,IAAWE,EAAKE,YAE7BE,QAAS,WACPL,GAAU,GACVM,YAAW,WACTd,EAAeS,EAAKE,WACpBH,GAAU,KACT,MAZP,UAeE,sBAAMhC,UAAU,gBAAhB,SACGiC,EAAKM,SAEPN,EAAKb,QAhBDa,EAAKrB,e,QCNX4B,G,MAAW,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,kBAAmBC,EAAiC,EAAjCA,WAAYlB,EAAqB,EAArBA,eAClDF,EAAmBqB,EACtBC,MAAK,SAAAC,GAAQ,OAAIA,EAASjC,KAAO6B,KAFyC,EAGvCX,oBAAS,GAH8B,mBAGtEhB,EAHsE,KAGzDgC,EAHyD,KAQ7E,OACE,qCACGJ,GACC,sBAAK1C,UAAU,eAAf,UACE,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,aAAf,UACE,mBACE+C,KAAK,uBACL/C,UAAU,OACVoB,MAAM,kBAER,mBACE2B,KAAK,kCACL/C,UAAU,QACVoB,MAAM,cAER,wBACEd,KAAK,SACLN,UAAWe,IACT,cACA,CAAE,sBAAuBD,IAE3BuB,QA1Bc,WAC1BS,GAAgBhC,IAmBN,SAQE,8BAGJ,cAAC,EAAD,eAAeQ,IACf,cAAC,EAAD,CAASV,GAAI6B,EAAmBjB,eAAgBA,OAElD,cAAC,EAAD,CAAaZ,GAAI6B,EAAmB3B,YAAaA,QAGnD4B,GACA,cAAC,IAAD,CAAUM,KAAK,QAAQ5C,GAAG,OAAOC,OAAK,IAEtCoC,EAAoBE,EAAUM,QAC9B,cAAC,IAAD,CAAUD,KAAK,QAAQ5C,GAAG,OAAOC,OAAK,SClDjC6C,G,MAAU,SAAC,GAIjB,IAHLC,EAGI,EAHJA,cACAC,EAEI,EAFJA,qBACAX,EACI,EADJA,kBAEMY,EAAQ7C,EAAMoC,MAAK,SAAAX,GAAI,OAAIA,EAAKrB,KAAQ6B,EAAoB,KAElE,OACE,qBAAKzC,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOH,UAAU,WAEvC,sBAAKA,UAAU,aAAf,UACGqD,GACC,qCACE,oBAAIrD,UAAU,aAAd,0BAGA,qBAAIA,UAAU,aAAd,cACIqD,EAAMjC,MADV,kBAKFiC,GACA,oBAAIrD,UAAU,OAAd,kCAEsB,KAAtByC,GACA,oBAAIzC,UAAU,SAAd,kCAEF,cAAC,IAAD,CAASI,GAAG,QAAQC,OAAK,EAAzB,SACE,wBACEC,KAAK,SACLN,UAAU,cACVqC,QAAS,WACPc,GAAc,GACdC,EAAqB,IALzB,mCCcGE,MA9Cf,WAAgB,IAAD,EACqCxB,mBAAS,GAD9C,mBACNW,EADM,KACaW,EADb,OAEuBtB,oBAAS,GAFhC,mBAENY,EAFM,KAEMS,EAFN,KAGP3B,EAAiB,SAACU,GAClBA,EACFkB,EAAqBX,EAAoB,GAEzCU,GAAc,IAOlB,OAHAI,qBAAU,cACP,CAACd,IAGF,qBAAKzC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwD,KAAK,IAAInD,OAAK,EAACoD,UAAW1D,IACjC,cAAC,IAAD,CACEyD,KAAK,QACLnD,OAAK,EACLqD,OAAQ,kBACN,cAAC,EAAD,CACEjB,kBAAmBA,EACnBC,WAAYA,EACZS,cAAeA,EACf3B,eAAgBA,OAItB,cAAC,IAAD,CACEgC,KAAK,OACLnD,OAAK,EACLqD,OAAQ,kBACN,cAAC,EAAD,CACEP,cAAeA,EACfV,kBAAmBA,EACnBW,qBAAsBA,aCrCpCO,IAASD,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFE,SAASC,eAAe,W","file":"static/js/main.22112d70.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hand.dbb74bc4.svg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport hand from '../../images/hand.svg';\n\nimport './StartPage.css';\n\nexport const StartPage = () => (\n  <div className=\"start\">\n    <div className=\"start__content\">\n      <div className=\"start__left\">\n        <img src={hand} alt=\"hand\" className=\"hand\" />\n      </div>\n      <div className=\"start__right\">\n        <h2 className=\"start__title\">\n          Who wants to be\n          <br />\n          a millionaire?\n        </h2>\n        <NavLink to=\"/game\" exact>\n          <button\n            type=\"button\"\n            className=\"start__button\"\n          >\n            Start\n          </button>\n        </NavLink>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport money from '../../api/money.json';\n\nimport './WinningList.css';\n\nconst preparedMoney = money.sort((a, b) => b.id - a.id);\n\nexport const WinningList = ({ id, visibleMenu }) => (\n  <div\n    className={\n      ClassNames(\n        'side-bar',\n        { 'side-bar--active': visibleMenu },\n      )\n    }\n  >\n    <ul className=\"winning-list\">\n      {preparedMoney.map(part => (\n        <li\n          className={ClassNames('winning-list__item', {\n            previus: part.id < id,\n            selected: part.id === id,\n          })}\n          key={part.id}\n        >\n          {part.title}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nWinningList.propTypes = {\n  id: PropTypes.number.isRequired,\n  visibleMenu: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Questions.css';\n\nexport const Questions = preparedQuestion => (\n  <div className=\"questions\">\n    <p className=\"questions__item\">{preparedQuestion.title}</p>\n  </div>\n);\n\nQuestions.propTypes = {\n  preparedQuestion: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    images: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport answers from '../../api/answers.json';\n\nimport './Answers.css';\n\nexport const Answers = ({ id, selectedAnswer }) => {\n  const preparedAnswers = answers.filter(answer => answer.questionId === id);\n  const [submit, setSubmit] = useState(false);\n\n  return (\n    <div className=\"answers__wrapper\">\n      <ul className=\"answers-list\">\n        {preparedAnswers.map(item => (\n          <li className=\"item__wrapper\">\n            <button\n              type=\"submit\"\n              key={item.id}\n              className={ClassNames('answers-list__item', {\n                correct: submit && item.isCorrect,\n                inCorrect: submit && !item.isCorrect,\n              })}\n              onClick={() => {\n                setSubmit(true);\n                setTimeout(() => {\n                  selectedAnswer(item.isCorrect);\n                  setSubmit(false);\n                }, 1000);\n              }}\n            >\n              <span className=\"answer-letter\">\n                {item.letter}\n              </span>\n              {item.title}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nAnswers.propTypes = {\n  id: PropTypes.number.isRequired,\n  selectedAnswer: PropTypes.func.isRequired,\n};\n","/* eslint-disable jsx-a11y/anchor-has-content */\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { WinningList } from '../WinningList/WinningList';\nimport { Questions } from '../Questions/Questions';\nimport { Answers } from '../Answers/Answers';\nimport questions from '../../api/questions.json';\n\nimport './GamePage.css';\n\nexport const GamePage = ({ currentQuestionId, userAnswer, selectedAnswer }) => {\n  const preparedQuestion = questions\n    .find(question => question.id === currentQuestionId);\n  const [visibleMenu, setVisibleMenu] = useState(false);\n  const handleChangeVisible = () => {\n    setVisibleMenu(!visibleMenu);\n  };\n\n  return (\n    <>\n      {userAnswer && (\n        <div className=\"main-content\">\n          <div className=\"right__part\">\n            <div className=\"connection\">\n              <a\n                href=\"tel:+380 986 384 563\"\n                className=\"call\"\n                title=\"Call a friend\"\n              />\n              <a\n                href=\"mailto: chrispakulyak@gmail.com\"\n                className=\"email\"\n                title=\"Help hall\"\n              />\n              <button\n                type=\"button\"\n                className={ClassNames(\n                  'menu-button',\n                  { 'menu-button--active': visibleMenu },\n                )}\n                onClick={handleChangeVisible}\n              >\n                <span />\n              </button>\n            </div>\n            <Questions {...preparedQuestion} />\n            <Answers id={currentQuestionId} selectedAnswer={selectedAnswer} />\n          </div>\n          <WinningList id={currentQuestionId} visibleMenu={visibleMenu} />\n        </div>\n      )}\n      {!userAnswer && (\n        <Redirect from=\"/game\" to=\"/end\" exact />\n      )}\n      {(currentQuestionId > questions.length) && (\n        <Redirect from=\"/game\" to=\"/end\" exact />\n      )}\n    </>\n  );\n};\n\nGamePage.propTypes = {\n  currentQuestionId: PropTypes.number.isRequired,\n  userAnswer: PropTypes.bool.isRequired,\n  selectedAnswer: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport hand from '../../images/hand.svg';\nimport money from '../../api/money.json';\nimport './EndPage.css';\n\nexport const EndPage = ({\n  setUserAnswer,\n  setCurrentQuestionId,\n  currentQuestionId,\n}) => {\n  const score = money.find(item => item.id === (currentQuestionId - 1));\n\n  return (\n    <div className=\"end\">\n      <div className=\"end__content\">\n        <div className=\"end__left\">\n          <img src={hand} alt=\"hand\" className=\"hand\" />\n        </div>\n        <div className=\"end__right\">\n          {score && (\n            <>\n              <h4 className=\"end__title\">\n                Total score:\n              </h4>\n              <h2 className=\"end__score\">\n                `{score.title} earned`\n              </h2>\n            </>\n          )}\n          {!score && (\n            <h2 className=\"next\">Good luck next time!</h2>\n          )}\n          {(currentQuestionId === 13) && (\n            <h1 className=\"winner\">You are millionaire!</h1>\n          )}\n          <NavLink to=\"/game\" exact>\n            <button\n              type=\"button\"\n              className=\"end__button\"\n              onClick={() => {\n                setUserAnswer(true);\n                setCurrentQuestionId(1);\n              }}\n            >\n              Try again\n            </button>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nEndPage.propTypes = {\n  setUserAnswer: PropTypes.func.isRequired,\n  currentQuestionId: PropTypes.number.isRequired,\n  setCurrentQuestionId: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { StartPage } from './components/StartPage/StartPage';\nimport { GamePage } from './components/GamePage/GamePage';\nimport { EndPage } from './components/EndPage/EndPage';\n\nfunction App() {\n  const [currentQuestionId, setCurrentQuestionId] = useState(1);\n  const [userAnswer, setUserAnswer] = useState(true);\n  const selectedAnswer = (correct) => {\n    if (correct) {\n      setCurrentQuestionId(currentQuestionId + 1);\n    } else {\n      setUserAnswer(false);\n    }\n  };\n\n  useEffect(() => {\n  }, [currentQuestionId]);\n\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/\" exact component={StartPage} />\n        <Route\n          path=\"/game\"\n          exact\n          render={() => (\n            <GamePage\n              currentQuestionId={currentQuestionId}\n              userAnswer={userAnswer}\n              setUserAnswer={setUserAnswer}\n              selectedAnswer={selectedAnswer}\n            />\n          )}\n        />\n        <Route\n          path=\"/end\"\n          exact\n          render={() => (\n            <EndPage\n              setUserAnswer={setUserAnswer}\n              currentQuestionId={currentQuestionId}\n              setCurrentQuestionId={setCurrentQuestionId}\n            />\n          )}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}